{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FoodDetailsCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport '../FoodAndDrinkDetails.css';\n\nclass FoodDetailsCard extends Component {\n  render() {\n    const {\n      foodDetails\n    } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map(item => item[1]);\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '16rem'\n      },\n      className: \"food-details-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      height: \"250px\",\n      width: \"300px\",\n      \"data-testid\": \"recipe-photo\",\n      src: foodDetails.strMealThumb,\n      alt: \"Foto do prato\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"recipe-title\",\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, foodDetails.strMeal), /*#__PURE__*/React.createElement(ShareButton, {\n      test: \"share-btn\",\n      id: foodDetails.idMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FavoriteButton, {\n      test: \"favorite-btn\",\n      id: foodDetails.idMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, foodDetails.strCategory), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, ingredients.map((item, index) => item ? /*#__PURE__*/React.createElement(\"li\", {\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, `${item} - ${measurements[index]}`) : '')), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, foodDetails.strInstructions)), /*#__PURE__*/React.createElement(\"iframe\", {\n      \"data-testid\": \"video\",\n      width: \"300px\",\n      height: \"250px\",\n      title: \"V\\xEDdeo da Receita\",\n      src: foodDetails.strYoutube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodDetails: state.foodReducer.foodDetails\n});\n\nFoodDetailsCard.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps)(FoodDetailsCard);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FoodDetailsCard.js"],"names":["React","Component","PropTypes","connect","Card","ShareButton","FavoriteButton","FoodDetailsCard","render","foodDetails","props","ingredients","measurements","array","Array","of","Object","entries","length","filter","item","includes","map","width","strMealThumb","strMeal","idMeal","strCategory","index","strInstructions","strYoutube","mapStateToProps","state","foodReducer","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,4BAAP;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,UAAMC,KAAK,GAAGC,KAAK,CAACC,EAAN,CAASC,MAAM,CAACC,OAAP,CAAeR,WAAf,CAAT,CAAd;;AACA,QAAII,KAAK,CAAC,CAAD,CAAL,CAASK,MAAT,GAAkB,CAAtB,EAAyB;AACvBP,MAAAA,WAAW,GAAGE,KAAK,CAAC,CAAD,CAAL,CAASM,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiB,eAAjB,CAA1B,EACXF,MADW,CACHC,IAAD,IAAUA,IAAI,CAAC,CAAD,CADV,EACeE,GADf,CACoBF,IAAD,IAAUA,IAAI,CAAC,CAAD,CADjC,CAAd;AAEAR,MAAAA,YAAY,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASM,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiB,YAAjB,CAA1B,EACZF,MADY,CACJC,IAAD,IAAUA,IAAI,CAAC,CAAD,CADT,EACcE,GADd,CACmBF,IAAD,IAAUA,IAAI,CAAC,CAAD,CADhC,CAAf;AAED;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAG;AAAEG,QAAAA,KAAK,EAAE;AAAT,OADV;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,IAAD,CAAM,GAAN;AACE,MAAA,OAAO,EAAC,KADV;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,qBAAY,cAJd;AAKE,MAAA,GAAG,EAAGd,WAAW,CAACe,YALpB;AAME,MAAA,GAAG,EAAC,eANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAYE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,qBAAY,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIf,WAAW,CAACgB,OAJhB,CADF,eAOE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,EAAE,EAAGhB,WAAW,CAACiB,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,cAArB;AAAoC,MAAA,EAAE,EAAGjB,WAAW,CAACiB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE;AAAG,qBAAY,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCjB,WAAW,CAACkB,WAA/C,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIhB,WAAW,CACVW,GADD,CACK,CAACF,IAAD,EAAOQ,KAAP,KAAkBR,IAAI,gBAEvB;AACE,qBAAe,GAAEQ,KAAM,8BADzB;AAEE,MAAA,GAAG,EAAGA,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,GAAER,IAAK,MAAKR,YAAY,CAACgB,KAAD,CAAQ,EAJpC,CAFuB,GAQvB,EATJ,CADJ,CAVF,eAsBE;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCnB,WAAW,CAACoB,eAA5C,CAtBF,CAZF,eAoCE;AACE,qBAAY,OADd;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,GAAG,EAAGpB,WAAW,CAACqB,UALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,CADF,CADF;AAgDD;;AA5DqC;;AA+DxC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCvB,EAAAA,WAAW,EAAEuB,KAAK,CAACC,WAAN,CAAkBxB;AADG,CAAZ,CAAxB;;AAIAF,eAAe,CAAC2B,SAAhB,GAA4B;AAC1BzB,EAAAA,WAAW,EAAEP,SAAS,CAACiC,KAAV,CAAgB;AAC3BX,IAAAA,YAAY,EAAEtB,SAAS,CAACkC,MADG;AAE3BX,IAAAA,OAAO,EAAEvB,SAAS,CAACkC,MAFQ;AAG3BT,IAAAA,WAAW,EAAEzB,SAAS,CAACkC,MAHI;AAI3BP,IAAAA,eAAe,EAAE3B,SAAS,CAACkC,MAJA;AAK3BN,IAAAA,UAAU,EAAE5B,SAAS,CAACkC,MALK;AAM3BV,IAAAA,MAAM,EAAExB,SAAS,CAACkC;AANS,GAAhB,EAOVC;AARuB,CAA5B;AAWA,eAAelC,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,eAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport '../FoodAndDrinkDetails.css';\n\nclass FoodDetailsCard extends Component {\n  render() {\n    const { foodDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(foodDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <div className=\"div-details\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"food-details-card\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ foodDetails.strMealThumb }\n            alt=\"Foto do prato\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { foodDetails.strMeal }\n            </Card.Title>\n            <ShareButton test=\"share-btn\" id={ foodDetails.idMeal } />\n            <FavoriteButton test=\"favorite-btn\" id={ foodDetails.idMeal } />\n            <p data-testid=\"recipe-category\">{ foodDetails.strCategory }</p>\n            <ul>\n              { ingredients\n                .map((item, index) => (item\n                  ? (\n                    <li\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                      key={ index }\n                    >\n                      {`${item} - ${measurements[index]}`}\n                    </li>)\n                  : ''))}\n            </ul>\n            <p data-testid=\"instructions\">{ foodDetails.strInstructions }</p>\n          </Card.Body>\n          <iframe\n            data-testid=\"video\"\n            width=\"300px\"\n            height=\"250px\"\n            title=\"Vídeo da Receita\"\n            src={ foodDetails.strYoutube }\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodDetails: state.foodReducer.foodDetails,\n});\n\nFoodDetailsCard.propTypes = {\n  foodDetails: PropTypes.shape({\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    strYoutube: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(FoodDetailsCard);\n"]},"metadata":{},"sourceType":"module"}