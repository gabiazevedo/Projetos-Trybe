{"ast":null,"code":"import { fetchAPIName, fetchAPICategory, fetchAPICategoryFilter, fetchAPIByID, fetchFoodRandom, fetchFoodIngredient, fetchFoodArea, fetchFoodIngredientSearch } from '../../services/fetchAPIFood';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIDrink';\nexport const FOOD_LIST_SUCCESS = 'FOOD_LIST_SUCCESS';\nexport const FOOD_CATEGORY_SUCCESS = 'FOOD_CATEGORY_SUCCESS';\nexport const FOOD_LIST_CATEGORY_SUCCESS = 'FOOD_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const FOOD_DETAILS_ID_SUCCESS = 'FOOD_DETAILS_ID_SUCCESS';\nexport const DRINK_RECOMENDATIONS_SUCCESS = 'DRINK_RECOMENDATIONS_SUCCESS';\nexport const FOOD_INGREDIENTS = 'FOOD_INGREDIENTS';\nexport const FOOD_AREA = 'FOOD_AREA';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_FOOD_INGREDIENTS = 'RENDER_FOOD_INGREDIENTS';\n\nconst foodListSuccess = payload => ({\n  type: FOOD_LIST_SUCCESS,\n  payload\n});\n\nexport const fetchFoodList = name => async dispatch => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nconst foodCategorySuccess = payload => ({\n  type: FOOD_CATEGORY_SUCCESS,\n  payload\n});\n\nexport const fetchFoodCategory = category => async dispatch => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(foodCategorySuccess(returnFetch));\n};\n\nconst foodListByCategorySuccess = payload => ({\n  type: FOOD_LIST_CATEGORY_SUCCESS,\n  payload\n});\n\nconst drinkRecomendations = payload => ({\n  type: DRINK_RECOMENDATIONS_SUCCESS,\n  payload\n});\n\nexport const fetchDrinkRecomendations = name => async dispatch => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(drinkRecomendations(returnFetch));\n};\nexport const updateCategory = payload => ({\n  type: UPDATE_CATEGORY,\n  payload\n});\nexport const fetchFoodListByCategory = category => async dispatch => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(foodListByCategorySuccess(returnFetch));\n};\n\nconst foodDetailsIDSuccess = payload => ({\n  type: FOOD_DETAILS_ID_SUCCESS,\n  payload\n});\n\nexport const fetchFoodID = id => async dispatch => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(foodDetailsIDSuccess(returnFetch));\n};\nexport const saveFavoriteRecipe = id => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idMeal,\n    type: 'comida',\n    area: returnFetch[0].strArea,\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: '',\n    name: returnFetch[0].strMeal,\n    image: returnFetch[0].strMealThumb\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  }\n};\nexport const removeFavoriteRecipe = id => async () => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes.filter(item => item.id !== id && item.type !== 'comida');\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n};\nexport const randomFoodId = () => async () => {\n  const returnFetch = await fetchFoodRandom();\n  return returnFetch;\n};\n\nconst searchFoodIngredient = payload => ({\n  type: FOOD_INGREDIENTS,\n  payload\n});\n\nexport const foodIngredient = () => async dispatch => {\n  const returnFetch = await fetchFoodIngredient();\n  dispatch(searchFoodIngredient(returnFetch));\n};\n\nconst foodArea = payload => ({\n  type: FOOD_AREA,\n  payload\n});\n\nexport const fetchFoodAreaSuccess = () => async dispatch => {\n  const returnFetch = await fetchFoodArea();\n  dispatch(foodArea(returnFetch));\n};\nexport const renderFoodIngredient = payload => ({\n  type: RENDER_FOOD_INGREDIENTS,\n  payload\n});\nexport const fetchFoodIngredientList = ingredient => async dispatch => {\n  const returnFetch = await fetchFoodIngredientSearch(ingredient);\n  dispatch(foodListSuccess(returnFetch));\n};","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/redux/actions/foodActions.js"],"names":["fetchAPIName","fetchAPICategory","fetchAPICategoryFilter","fetchAPIByID","fetchFoodRandom","fetchFoodIngredient","fetchFoodArea","fetchFoodIngredientSearch","fetchRecomendations","FOOD_LIST_SUCCESS","FOOD_CATEGORY_SUCCESS","FOOD_LIST_CATEGORY_SUCCESS","UPDATE_CATEGORY","FOOD_DETAILS_ID_SUCCESS","DRINK_RECOMENDATIONS_SUCCESS","FOOD_INGREDIENTS","FOOD_AREA","SAVE_FAVORITES","RENDER_FOOD_INGREDIENTS","foodListSuccess","payload","type","fetchFoodList","name","dispatch","returnFetch","foodCategorySuccess","fetchFoodCategory","category","foodListByCategorySuccess","drinkRecomendations","fetchDrinkRecomendations","updateCategory","fetchFoodListByCategory","foodDetailsIDSuccess","fetchFoodID","id","saveFavoriteRecipe","genericObj","idMeal","area","strArea","strCategory","alcoholicOrNot","strMeal","image","strMealThumb","favoriteRecipes","JSON","parse","localStorage","getItem","setItem","stringify","newFavoriteRecipes","removeFavoriteRecipe","filter","item","randomFoodId","searchFoodIngredient","foodIngredient","foodArea","fetchFoodAreaSuccess","renderFoodIngredient","fetchFoodIngredientList","ingredient"],"mappings":"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","sourcesContent":["import { fetchAPIName, fetchAPICategory,\n  fetchAPICategoryFilter, fetchAPIByID,\n  fetchFoodRandom, fetchFoodIngredient,\n  fetchFoodArea, fetchFoodIngredientSearch } from '../../services/fetchAPIFood';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIDrink';\n\nexport const FOOD_LIST_SUCCESS = 'FOOD_LIST_SUCCESS';\nexport const FOOD_CATEGORY_SUCCESS = 'FOOD_CATEGORY_SUCCESS';\nexport const FOOD_LIST_CATEGORY_SUCCESS = 'FOOD_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const FOOD_DETAILS_ID_SUCCESS = 'FOOD_DETAILS_ID_SUCCESS';\nexport const DRINK_RECOMENDATIONS_SUCCESS = 'DRINK_RECOMENDATIONS_SUCCESS';\nexport const FOOD_INGREDIENTS = 'FOOD_INGREDIENTS';\nexport const FOOD_AREA = 'FOOD_AREA';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_FOOD_INGREDIENTS = 'RENDER_FOOD_INGREDIENTS';\n\nconst foodListSuccess = (payload) => ({\n  type: FOOD_LIST_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodList = (name) => async (dispatch) => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(foodListSuccess(returnFetch));\n};\n\nconst foodCategorySuccess = (payload) => ({\n  type: FOOD_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodCategory = (category) => async (dispatch) => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(foodCategorySuccess(returnFetch));\n};\n\nconst foodListByCategorySuccess = (payload) => ({\n  type: FOOD_LIST_CATEGORY_SUCCESS,\n  payload,\n});\n\nconst drinkRecomendations = (payload) => ({\n  type: DRINK_RECOMENDATIONS_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkRecomendations = (name) => async (dispatch) => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(drinkRecomendations(returnFetch));\n};\n\nexport const updateCategory = (payload) => ({\n  type: UPDATE_CATEGORY,\n  payload,\n});\n\nexport const fetchFoodListByCategory = (category) => async (dispatch) => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(foodListByCategorySuccess(returnFetch));\n};\n\nconst foodDetailsIDSuccess = (payload) => ({\n  type: FOOD_DETAILS_ID_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodID = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(foodDetailsIDSuccess(returnFetch));\n};\n\nexport const saveFavoriteRecipe = (id) => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idMeal,\n    type: 'comida',\n    area: returnFetch[0].strArea,\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: '',\n    name: returnFetch[0].strMeal,\n    image: returnFetch[0].strMealThumb,\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  }\n};\n\nexport const removeFavoriteRecipe = (id) => async () => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes\n    .filter((item) => item.id !== id && item.type !== 'comida');\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n};\n\nexport const randomFoodId = () => async () => {\n  const returnFetch = await fetchFoodRandom();\n  return returnFetch;\n};\n\nconst searchFoodIngredient = (payload) => ({\n  type: FOOD_INGREDIENTS,\n  payload,\n});\n\nexport const foodIngredient = () => async (dispatch) => {\n  const returnFetch = await fetchFoodIngredient();\n  dispatch(searchFoodIngredient(returnFetch));\n};\n\nconst foodArea = (payload) => ({\n  type: FOOD_AREA,\n  payload,\n});\n\nexport const fetchFoodAreaSuccess = () => async (dispatch) => {\n  const returnFetch = await fetchFoodArea();\n  dispatch(foodArea(returnFetch));\n};\n\nexport const renderFoodIngredient = (payload) => ({\n  type: RENDER_FOOD_INGREDIENTS,\n  payload,\n});\n\nexport const fetchFoodIngredientList = (ingredient) => async (dispatch) => {\n  const returnFetch = await fetchFoodIngredientSearch(ingredient);\n  dispatch(foodListSuccess(returnFetch));\n};\n"]},"metadata":{},"sourceType":"module"}