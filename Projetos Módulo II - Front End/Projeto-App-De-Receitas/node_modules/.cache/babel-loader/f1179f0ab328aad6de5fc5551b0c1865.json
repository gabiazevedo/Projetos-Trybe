{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/FavoriteRecipes.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Header } from '../components';\nimport DrinkFavoriteButton from '../components/DrinkFavoriteButton';\nimport DrinkShareButton from '../components/DrinkShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport ShareButton from '../components/ShareButton';\nimport { saveFavoritesRedux } from '../redux/actions/foodActions';\nimport '../Favorities.css';\n\nclass FavoriteRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filter: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateFavorites\n    } = this.props;\n    const localFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    updateFavorites(localFavorites);\n  }\n\n  FilterList(filter) {\n    this.setState({\n      filter\n    });\n  }\n\n  render() {\n    const {\n      favoriteRecipes\n    } = this.props;\n    const {\n      filter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Receitas Favoritas\",\n      search: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-category-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-dark\",\n      className: \"category-buttons-filter\",\n      \"data-testid\": \"filter-by-all-btn\",\n      onClick: () => this.FilterList(''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-dark\",\n      className: \"category-buttons-filter\",\n      \"data-testid\": \"filter-by-food-btn\",\n      onClick: () => this.FilterList('comida'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Food\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-dark\",\n      className: \"category-buttons-filter\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => this.FilterList('bebida'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Drink\")), favoriteRecipes && favoriteRecipes.filter(item => item.type.includes(filter)).map((item, index) => {\n      if (item.type === 'comida') {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: index,\n          style: {\n            width: '16rem'\n          },\n          className: \"done-recipes-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/comidas/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Img, {\n          variant: \"top\",\n          height: \"200px\",\n          width: \"300px\",\n          \"data-testid\": `${index}-horizontal-image`,\n          src: item.image,\n          alt: \"foto da receita\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          className: \"done-recipe-title\",\n          \"data-testid\": `${index}-horizontal-top-text`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        }, `${item.area} - ${item.category}`), /*#__PURE__*/React.createElement(Card.Title, {\n          className: \"done-recipe-title\",\n          \"data-testid\": `${index}-horizontal-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/comidas/${item.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, item.name)), /*#__PURE__*/React.createElement(ShareButton, {\n          test: `${index}-horizontal-share-btn`,\n          id: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(FavoriteButton, {\n          test: `${index}-horizontal-favorite-btn`,\n          id: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 23\n          }\n        }))));\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: '16rem'\n        },\n        className: \"done-recipes-card\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/bebidas/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        height: \"200px\",\n        width: \"300px\",\n        \"data-testid\": `${index}-horizontal-image`,\n        src: item.image,\n        alt: \"foto da receita\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"done-recipe-title\",\n        \"data-testid\": `${index}-horizontal-top-text`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, item.alcoholicOrNot), /*#__PURE__*/React.createElement(Card.Title, {\n        \"data-testid\": `${index}-horizontal-name`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/bebidas/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      }, item.name)), /*#__PURE__*/React.createElement(DrinkShareButton, {\n        test: `${index}-horizontal-share-btn`,\n        id: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DrinkFavoriteButton, {\n        test: `${index}-horizontal-favorite-btn`,\n        id: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  favoriteRecipes: state.foodReducer.favorites\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavorites: list => dispatch(saveFavoritesRedux(list))\n});\n\nFavoriteRecipes.propTypes = {\n  favoriteRecipes: PropTypes.array,\n  updateFavorites: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteRecipes);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/FavoriteRecipes.js"],"names":["React","Component","connect","Link","PropTypes","Button","Card","Header","DrinkFavoriteButton","DrinkShareButton","FavoriteButton","ShareButton","saveFavoritesRedux","FavoriteRecipes","constructor","state","filter","componentDidMount","updateFavorites","props","localFavorites","JSON","parse","localStorage","getItem","FilterList","setState","render","favoriteRecipes","item","type","includes","map","index","width","id","image","area","category","name","alcoholicOrNot","mapStateToProps","foodReducer","favorites","mapDispatchToProps","dispatch","list","propTypes","array","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAO,mBAAP;;AAEA,MAAMC,eAAN,SAA8BZ,SAA9B,CAAwC;AACtCa,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKC,KAAjC;AACA,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAvB;AACAN,IAAAA,eAAe,CAACE,cAAD,CAAf;AACD;;AAEDK,EAAAA,UAAU,CAACT,MAAD,EAAS;AACjB,SAAKU,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd;AAGD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKT,KAAjC;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,oBAAd;AAAmC,MAAA,MAAM,EAAG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,SAAS,EAAC,yBAHZ;AAIE,qBAAY,mBAJd;AAKE,MAAA,OAAO,EAAG,MAAM,KAAKU,UAAL,CAAgB,EAAhB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAUE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,SAAS,EAAC,yBAHZ;AAIE,qBAAY,oBAJd;AAKE,MAAA,OAAO,EAAG,MAAM,KAAKA,UAAL,CAAgB,QAAhB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,SAAS,EAAC,yBAHZ;AAIE,qBAAY,qBAJd;AAKE,MAAA,OAAO,EAAG,MAAM,KAAKA,UAAL,CAAgB,QAAhB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBF,CAFF,EA+BGG,eAAe,IAAIA,eAAe,CAACZ,MAAhB,CAAwBa,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBf,MAAnB,CAAjC,EACjBgB,GADiB,CACb,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACpB,UAAIJ,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,4BACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAGG,KADR;AAEE,UAAA,KAAK,EAAG;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAFV;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKE;AAAI,UAAA,GAAG,EAAGL,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAI,YAAWN,IAAI,CAACM,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,GAAN;AACE,UAAA,OAAO,EAAC,KADV;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,KAAK,EAAC,OAHR;AAIE,yBAAe,GAAEF,KAAM,mBAJzB;AAKE,UAAA,GAAG,EAAGJ,IAAI,CAACO,KALb;AAME,UAAA,GAAG,EAAC,iBANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,KAAN;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,yBAAe,GAAEH,KAAM,sBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIK,GAAEJ,IAAI,CAACQ,IAAK,MAAKR,IAAI,CAACS,QAAS,EAJpC,CADF,eAOE,oBAAC,IAAD,CAAM,KAAN;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,yBAAe,GAAEL,KAAM,kBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAI,YAAWJ,IAAI,CAACM,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIN,IAAI,CAACU,IADT,CAJF,CAPF,eAeE,oBAAC,WAAD;AACE,UAAA,IAAI,EAAI,GAAEN,KAAM,uBADlB;AAEE,UAAA,EAAE,EAAGJ,IAAI,CAACM,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAfF,eAmBE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAI,GAAEF,KAAM,0BADlB;AAEE,UAAA,EAAE,EAAGJ,IAAI,CAACM,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnBF,CAXF,CALF,CADF;AA4CD;;AACD,0BACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAG;AAAED,UAAAA,KAAK,EAAE;AAAT,SADV;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,GAAG,EAAGL,IAAI,CAACM,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAI,YAAWN,IAAI,CAACM,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,GAAN;AACE,QAAA,OAAO,EAAC,KADV;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,uBAAe,GAAEF,KAAM,mBAJzB;AAKE,QAAA,GAAG,EAAGJ,IAAI,CAACO,KALb;AAME,QAAA,GAAG,EAAC,iBANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,uBAAe,GAAEH,KAAM,sBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIJ,IAAI,CAACW,cAJT,CAFF,eAQE,oBAAC,IAAD,CAAM,KAAN;AACE,uBAAe,GAAEP,KAAM,kBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAI,YAAWJ,IAAI,CAACM,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIN,IAAI,CAACU,IADT,CAHF,CARF,eAeE,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAI,GAAEN,KAAM,uBADlB;AAEE,QAAA,EAAE,EAAGJ,IAAI,CAACM,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eAmBE,oBAAC,mBAAD;AACE,QAAA,IAAI,EAAI,GAAEF,KAAM,0BADlB;AAEE,QAAA,EAAE,EAAGJ,IAAI,CAACM,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CAXF,CALF,CADF;AA4CD,KA5FiB,CA/BtB,CADF;AA+HD;;AAtJqC;;AAyJxC,MAAMM,eAAe,GAAI1B,KAAD,KAAY;AAClCa,EAAAA,eAAe,EAAEb,KAAK,CAAC2B,WAAN,CAAkBC;AADD,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC3B,EAAAA,eAAe,EAAG4B,IAAD,IAAUD,QAAQ,CAACjC,kBAAkB,CAACkC,IAAD,CAAnB;AADK,CAAf,CAA3B;;AAIAjC,eAAe,CAACkC,SAAhB,GAA4B;AAC1BnB,EAAAA,eAAe,EAAExB,SAAS,CAAC4C,KADD;AAE1B9B,EAAAA,eAAe,EAAEd,SAAS,CAAC6C;AAFD,EAG1BC,UAHF;AAKA,eAAehD,OAAO,CAACuC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/B,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Header } from '../components';\nimport DrinkFavoriteButton from '../components/DrinkFavoriteButton';\nimport DrinkShareButton from '../components/DrinkShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport ShareButton from '../components/ShareButton';\nimport { saveFavoritesRedux } from '../redux/actions/foodActions';\nimport '../Favorities.css';\n\nclass FavoriteRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filter: '',\n    };\n  }\n\n  componentDidMount() {\n    const { updateFavorites } = this.props;\n    const localFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    updateFavorites(localFavorites);\n  }\n\n  FilterList(filter) {\n    this.setState({\n      filter,\n    });\n  }\n\n  render() {\n    const { favoriteRecipes } = this.props;\n    const { filter } = this.state;\n    return (\n      <div>\n        <Header title=\"Receitas Favoritas\" search={ false } />\n        <div className=\"div-category-filter\">\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => this.FilterList('') }\n          >\n            All\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => this.FilterList('comida') }\n          >\n            Food\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons-filter\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => this.FilterList('bebida') }\n          >\n            Drink\n          </Button>\n        </div>\n        {favoriteRecipes && favoriteRecipes.filter((item) => item.type.includes(filter))\n          .map((item, index) => {\n            if (item.type === 'comida') {\n              return (\n                <Card\n                  key={ index }\n                  style={ { width: '16rem' } }\n                  className=\"done-recipes-card\"\n                >\n                  <li key={ item.id }>\n                    <Link to={ `/comidas/${item.id}` }>\n                      <Card.Img\n                        variant=\"top\"\n                        height=\"200px\"\n                        width=\"300px\"\n                        data-testid={ `${index}-horizontal-image` }\n                        src={ item.image }\n                        alt=\"foto da receita\"\n                      />\n                    </Link>\n                    <Card.Body>\n                      <Card.Title\n                        className=\"done-recipe-title\"\n                        data-testid={ `${index}-horizontal-top-text` }\n                      >\n                        { `${item.area} - ${item.category}` }\n                      </Card.Title>\n                      <Card.Title\n                        className=\"done-recipe-title\"\n                        data-testid={ `${index}-horizontal-name` }\n                      >\n                        <Link to={ `/comidas/${item.id}` }>\n                          { item.name }\n                        </Link>\n                      </Card.Title>\n                      <ShareButton\n                        test={ `${index}-horizontal-share-btn` }\n                        id={ item.id }\n                      />\n                      <FavoriteButton\n                        test={ `${index}-horizontal-favorite-btn` }\n                        id={ item.id }\n                      />\n                    </Card.Body>\n                  </li>\n                </Card>\n              );\n            }\n            return (\n              <Card\n                style={ { width: '16rem' } }\n                className=\"done-recipes-card\"\n                key={ item.id }\n              >\n                <li>\n                  <Link to={ `/bebidas/${item.id}` }>\n                    <Card.Img\n                      variant=\"top\"\n                      height=\"200px\"\n                      width=\"300px\"\n                      data-testid={ `${index}-horizontal-image` }\n                      src={ item.image }\n                      alt=\"foto da receita\"\n                    />\n                  </Link>\n                  <Card.Body>\n\n                    <Card.Title\n                      className=\"done-recipe-title\"\n                      data-testid={ `${index}-horizontal-top-text` }\n                    >\n                      { item.alcoholicOrNot }\n                    </Card.Title>\n                    <Card.Title\n                      data-testid={ `${index}-horizontal-name` }\n                    >\n                      <Link to={ `/bebidas/${item.id}` }>\n                        { item.name }\n                      </Link>\n                    </Card.Title>\n                    <DrinkShareButton\n                      test={ `${index}-horizontal-share-btn` }\n                      id={ item.id }\n                    />\n                    <DrinkFavoriteButton\n                      test={ `${index}-horizontal-favorite-btn` }\n                      id={ item.id }\n                    />\n                  </Card.Body>\n                </li>\n              </Card>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  favoriteRecipes: state.foodReducer.favorites,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateFavorites: (list) => dispatch(saveFavoritesRedux(list)),\n});\n\nFavoriteRecipes.propTypes = {\n  favoriteRecipes: PropTypes.array,\n  updateFavorites: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteRecipes);\n"]},"metadata":{},"sourceType":"module"}