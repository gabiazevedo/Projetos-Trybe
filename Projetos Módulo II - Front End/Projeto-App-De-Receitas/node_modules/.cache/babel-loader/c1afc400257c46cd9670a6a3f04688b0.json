{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreFoodByArea.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FoodCard from '../components/FoodCard';\nimport { fetchFoodAreaSuccess, fetchFoodList, fetchSearchFoodArea } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreFoodByArea extends Component {\n  constructor() {\n    super();\n    this.handleFoodByArea = this.handleFoodByArea.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      fetchFoodArea,\n      actionFetchFoodList\n    } = this.props;\n    fetchFoodArea();\n    actionFetchFoodList('');\n  }\n\n  handleFoodByArea({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    const {\n      actionFetchFoodList,\n      actionFetchSearchFoodArea\n    } = this.props;\n\n    if (value === 'All') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchSearchFoodArea(value);\n    }\n  }\n\n  render() {\n    const {\n      foodArea,\n      foodCardsList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Explorar Origem\",\n      search: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"explore-by-area-dropdown\",\n      onChange: this.handleFoodByArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": \"All-option\",\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"All\"), foodArea && foodArea.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      \"data-testid\": `${item.strArea}-option`,\n      value: item.strArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, item.strArea))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, foodCardsList && foodCardsList.map((item, index) => /*#__PURE__*/React.createElement(FoodCard, {\n      key: item.idMeal,\n      food: item,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodArea: state.foodReducer.foodArea,\n  foodCardsList: state.foodReducer.foodCardsList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFoodArea: () => dispatch(fetchFoodAreaSuccess()),\n  actionFetchFoodList: name => dispatch(fetchFoodList(name)),\n  actionFetchSearchFoodArea: area => dispatch(fetchSearchFoodArea(area))\n});\n\nExploreFoodByArea.propTypes = {\n  foodArea: PropTypes.arrayOf(PropTypes.object),\n  fetchFoodArea: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodByArea);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreFoodByArea.js"],"names":["React","Component","connect","PropTypes","FoodCard","fetchFoodAreaSuccess","fetchFoodList","fetchSearchFoodArea","Header","Footer","ExploreFoodByArea","constructor","handleFoodByArea","bind","componentDidMount","fetchFoodArea","actionFetchFoodList","props","target","value","actionFetchSearchFoodArea","render","foodArea","foodCardsList","map","item","index","strArea","idMeal","mapStateToProps","state","foodReducer","mapDispatchToProps","dispatch","name","area","propTypes","arrayOf","object","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FoodCard from '../components/FoodCard';\nimport { fetchFoodAreaSuccess, fetchFoodList,\n  fetchSearchFoodArea } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreFoodByArea extends Component {\n  constructor() {\n    super();\n\n    this.handleFoodByArea = this.handleFoodByArea.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchFoodArea, actionFetchFoodList } = this.props;\n    fetchFoodArea();\n    actionFetchFoodList('');\n  }\n\n  handleFoodByArea({ target }) {\n    const { value } = target;\n    const { actionFetchFoodList,\n      actionFetchSearchFoodArea } = this.props;\n\n    if (value === 'All') {\n      actionFetchFoodList('');\n    } else {\n      actionFetchSearchFoodArea(value);\n    }\n  }\n\n  render() {\n    const { foodArea, foodCardsList } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Origem\" search />\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ this.handleFoodByArea }\n        >\n          <option\n            data-testid=\"All-option\"\n            value=\"All\"\n          >\n            All\n          </option>\n          { foodArea && foodArea.map((item, index) => (\n            <option\n              key={ index }\n              data-testid={ `${item.strArea}-option` }\n              value={ item.strArea }\n            >\n              { item.strArea }\n            </option>\n          )) }\n        </select>\n        <ul>\n          { foodCardsList && foodCardsList.map((item, index) => (\n            <FoodCard key={ item.idMeal } food={ item } index={ index } />)) }\n        </ul>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodArea: state.foodReducer.foodArea,\n  foodCardsList: state.foodReducer.foodCardsList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchFoodArea: () => dispatch(fetchFoodAreaSuccess()),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionFetchSearchFoodArea: (area) => dispatch(fetchSearchFoodArea(area)),\n});\n\nExploreFoodByArea.propTypes = {\n  foodArea: PropTypes.arrayOf(PropTypes.object),\n  fetchFoodArea: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodByArea);\n"]},"metadata":{},"sourceType":"module"}