{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/IngredientsDrinkInProgress.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../RecipesInProgress.css';\nimport Button from 'react-bootstrap/Button';\nimport { saveDoneRecipe } from '../redux/actions/drinkActions';\n\nclass IngredientesDrinkInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0]\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      drinkDetails\n    } = this.props;\n\n    if (!Object.is(prevProps.drinkDetails, drinkDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({\n    target\n  }) {\n    const {\n      checked,\n      value\n    } = target;\n\n    if (checked) {\n      this.setState(previousState => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)]\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState(previousState => ({\n        ingredientsArrayList: previousState.ingredientsArrayList.filter(box => box !== Number(value))\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const {\n      drinkDetails\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {}\n      };\n    }\n\n    inProgressRecipes.cocktails[drinkDetails.idDrink] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  } // ableButton(){\n  // }\n\n\n  markedBox() {\n    const {\n      drinkDetails\n    } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && Object.keys(inProgressRecipes.cocktails).find(cocktails => Number(cocktails) === Number(drinkDetails.idDrink))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.cocktails[drinkDetails.idDrink]\n      });\n    } else {\n      this.setState({\n        ingredientsArrayList: []\n      });\n    }\n  }\n\n  saveInDoneRecipes() {}\n\n  render() {\n    console.log('qualquer coisa');\n    const {\n      drinkDetails,\n      saveDoneRecipesAction\n    } = this.props;\n    const {\n      ingredientsArrayList\n    } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map(item => item[1]);\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, ingredients.map((item, index) => item ? /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `${index}-check-ingredients`,\n      className: ingredientsArrayList.some(ingredient => ingredient === index) ? 'checked-button' : '',\n      key: index,\n      \"data-testid\": `${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: ingredientsArrayList.some(ingredient => ingredient === index) // checked={ item.checked }\n      ,\n      onChange: this.handleOnchange,\n      value: index,\n      id: `${index}-check-ingredients`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }), `${item} - ${measurements[index]}`) : '')), /*#__PURE__*/React.createElement(Link, {\n      to: \"/receitas-feitas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"finish-recipe\",\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: ingredientsArrayList.length !== ingredients.length,\n      onClick: () => saveDoneRecipesAction(drinkDetails.idDrink),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, ' ', \"Finalizar Receita\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drinkDetails: state.drinkReducer.drinkDetails\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveDoneRecipesAction: id => dispatch(saveDoneRecipe(id))\n});\n\nIngredientesDrinkInProgress.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string\n  }),\n  saveDoneRecipesAction: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientesDrinkInProgress);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/IngredientsDrinkInProgress.js"],"names":["React","Component","Link","connect","PropTypes","Button","saveDoneRecipe","IngredientesDrinkInProgress","constructor","state","ingredientsArrayList","handleOnchange","bind","saveInLocalStorage","componentDidUpdate","prevProps","drinkDetails","props","Object","is","markedBox","target","checked","value","setState","previousState","Number","filter","box","inProgressRecipes","JSON","parse","localStorage","getItem","cocktails","meals","idDrink","setItem","stringify","keys","find","saveInDoneRecipes","render","console","log","saveDoneRecipesAction","ingredients","measurements","array","Array","of","entries","length","item","includes","map","index","some","ingredient","mapStateToProps","drinkReducer","mapDispatchToProps","dispatch","id","propTypes","shape","strDrinkThumb","string","strDrink","strCategory","strInstructions","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../RecipesInProgress.css';\nimport Button from 'react-bootstrap/Button';\nimport { saveDoneRecipe } from '../redux/actions/drinkActions';\n\nclass IngredientesDrinkInProgress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientsArrayList: [0],\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { drinkDetails } = this.props;\n    if (!Object.is(prevProps.drinkDetails, drinkDetails)) {\n      this.markedBox();\n    }\n  }\n\n  handleOnchange({ target }) {\n    const { checked, value } = target;\n    if (checked) {\n      this.setState((previousState) => ({\n        ingredientsArrayList: [...previousState.ingredientsArrayList, Number(value)],\n      }), () => this.saveInLocalStorage());\n    } else {\n      this.setState((previousState) => ({\n        ingredientsArrayList: previousState.ingredientsArrayList\n          .filter((box) => box !== Number(value)),\n      }), () => this.saveInLocalStorage());\n    }\n  }\n\n  saveInLocalStorage() {\n    const { drinkDetails } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!inProgressRecipes) {\n      inProgressRecipes = {\n        cocktails: {},\n        meals: {},\n      };\n    }\n    inProgressRecipes.cocktails[drinkDetails.idDrink] = ingredientsArrayList;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  // ableButton(){\n\n  // }\n\n  markedBox() {\n    const { drinkDetails } = this.props;\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressRecipes && Object.keys(inProgressRecipes.cocktails)\n      .find((cocktails) => Number(cocktails) === Number(drinkDetails.idDrink))) {\n      this.setState({\n        ingredientsArrayList: inProgressRecipes.cocktails[drinkDetails.idDrink],\n      });\n    } else {\n      this.setState({\n        ingredientsArrayList: [],\n      });\n    }\n  }\n\n  saveInDoneRecipes() {\n\n  }\n\n  render() {\n    console.log('qualquer coisa');\n    const { drinkDetails, saveDoneRecipesAction } = this.props;\n    const { ingredientsArrayList } = this.state;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => (item[1]));\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <>\n        <ul>\n          { ingredients\n            .map((item, index) => (item\n              ? (\n                <label\n                  htmlFor={ `${index}-check-ingredients` }\n                  className={ ingredientsArrayList\n                    .some((ingredient) => ingredient === index) ? 'checked-button' : '' }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={ ingredientsArrayList\n                      .some((ingredient) => ingredient === index) }\n                    // checked={ item.checked }\n                    onChange={ this.handleOnchange }\n                    value={ index }\n                    id={ `${index}-check-ingredients` }\n                  />\n                  {`${item} - ${measurements[index]}`}\n                </label>\n              )\n              : ''))}\n        </ul>\n        <Link to=\"/receitas-feitas\">\n          <Button\n            className=\"finish-recipe\"\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            disabled={ ingredientsArrayList.length !== ingredients.length }\n            onClick={ () => saveDoneRecipesAction(drinkDetails.idDrink) }\n          >\n            {' '}\n            Finalizar Receita\n          </Button>\n        </Link>\n      </>);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkDetails: state.drinkReducer.drinkDetails,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveDoneRecipesAction: (id) => dispatch(saveDoneRecipe(id)),\n});\n\nIngredientesDrinkInProgress.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strCategory: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string,\n  }),\n  saveDoneRecipesAction: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientesDrinkInProgress);\n"]},"metadata":{},"sourceType":"module"}