{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FoodCategories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList } from '../redux/actions/foodActions';\n\nclass FoodCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const {\n      actionFetchFoodList,\n      actionUpdateCategory\n    } = this.props;\n    actionUpdateCategory('All');\n    actionFetchFoodList('');\n  }\n\n  filterByCategory(category) {\n    const {\n      actionFetchFoodByCategory,\n      selectedCategory\n    } = this.props;\n\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchFoodByCategory(category);\n    }\n  }\n\n  render() {\n    const {\n      foodCategories\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      className: \"category-buttons\",\n      type: \"button\",\n      name: \"category\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: this.filterByAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"All\"), foodCategories.map(item => /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      className: \"category-buttons\",\n      type: \"button\",\n      name: \"category\",\n      key: item.strCategory,\n      \"data-testid\": `${item.strCategory}-category-filter`,\n      onClick: () => this.filterByCategory(item.strCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, item.strCategory)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  foodCategories: state.foodReducer.foodCategoriesList,\n  selectedCategory: state.foodReducer.selectedCategory\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actionFetchFoodByCategory: category => dispatch(fetchFoodListByCategory(category)),\n  actionFetchFoodList: name => dispatch(fetchFoodList(name)),\n  actionUpdateCategory: category => dispatch(updateCategory(category))\n});\n\nFoodCategories.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchFoodByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  foodCategories: PropTypes.array,\n  selectedCategory: PropTypes.array\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodCategories);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FoodCategories.js"],"names":["React","Component","connect","PropTypes","Button","fetchFoodListByCategory","updateCategory","fetchFoodList","FoodCategories","constructor","filterByAll","bind","filterByCategory","actionFetchFoodList","actionUpdateCategory","props","category","actionFetchFoodByCategory","selectedCategory","render","foodCategories","map","item","strCategory","mapStateToProps","state","foodReducer","foodCategoriesList","mapDispatchToProps","dispatch","name","propTypes","func","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchFoodListByCategory, updateCategory, fetchFoodList,\n} from '../redux/actions/foodActions';\n\nclass FoodCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchFoodList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchFoodList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchFoodByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchFoodByCategory(category);\n    }\n  }\n\n  render() {\n    const { foodCategories } = this.props;\n    return (\n      <div>\n        <Button\n          variant=\"outline-dark\"\n          className=\"category-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { foodCategories.map((item) => (\n          <Button\n            variant=\"outline-dark\"\n            className=\"category-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodCategories: state.foodReducer.foodCategoriesList,\n  selectedCategory: state.foodReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchFoodByCategory: (category) => dispatch(fetchFoodListByCategory(category)),\n  actionFetchFoodList: (name) => dispatch(fetchFoodList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nFoodCategories.propTypes = {\n  actionFetchFoodList: PropTypes.func,\n  actionFetchFoodByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  foodCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodCategories);\n"]},"metadata":{},"sourceType":"module"}