{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkFavoriteButton.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveFavoriteRecipe, removeFavoriteRecipe } from '../redux/actions/drinkActions';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\n\nclass DrinkFavoriteButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      whiteHeart: true\n    };\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      id\n    } = this.props;\n    const {\n      whiteHeart\n    } = this.state;\n    const favoriteCocktails = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (whiteHeart && favoriteCocktails && favoriteCocktails.find(item => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    const {\n      favoriteRecipes,\n      id,\n      removeRecipes\n    } = this.props;\n    const {\n      whiteHeart\n    } = this.state;\n\n    if (whiteHeart === true) {\n      favoriteRecipes(id);\n    }\n\n    if (whiteHeart === false) {\n      removeRecipes(id);\n    }\n\n    this.setState(prevState => ({\n      whiteHeart: !prevState.whiteHeart\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false\n    });\n  }\n\n  render() {\n    const {\n      whiteHeart\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleFavoriteClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"favorite-btn\",\n      src: whiteHeart ? whiteHeartIcon : blackHeartIcon,\n      alt: \"favorite food button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  favoriteRecipes: id => dispatch(saveFavoriteRecipe(id)),\n  removeRecipes: id => dispatch(removeFavoriteRecipe(id))\n});\n\nDrinkFavoriteButton.propTypes = {\n  id: PropTypes.number,\n  favoriteRecipes: PropTypes.func,\n  removeRecipes: PropTypes.func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(DrinkFavoriteButton);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkFavoriteButton.js"],"names":["React","Component","connect","PropTypes","saveFavoriteRecipe","removeFavoriteRecipe","DrinkFavoriteButton","constructor","state","whiteHeart","handleFavoriteClick","bind","setFavoriteIcon","componentDidUpdate","id","props","favoriteCocktails","JSON","parse","localStorage","getItem","find","item","favoriteRecipes","removeRecipes","setState","prevState","render","whiteHeartIcon","blackHeartIcon","mapDispatchToProps","dispatch","propTypes","number","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,+BAAzD;;;;AAIA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAC1CM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAMQ,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1B;;AACA,QAAIX,UAAU,IAAIO,iBAAd,IACCA,iBAAiB,CAACK,IAAlB,CAAwBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAA7C,CADL,EACuD;AACrD,WAAKF,eAAL;AACD;AACF;;AAEDF,EAAAA,mBAAmB,GAAG;AACpB,UAAM;AAAEa,MAAAA,eAAF;AAAmBT,MAAAA,EAAnB;AAAuBU,MAAAA;AAAvB,QAAyC,KAAKT,KAApD;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;;AACA,QAAIC,UAAU,KAAK,IAAnB,EAAyB;AACvBc,MAAAA,eAAe,CAACT,EAAD,CAAf;AACD;;AACD,QAAIL,UAAU,KAAK,KAAnB,EAA0B;AACxBe,MAAAA,aAAa,CAACV,EAAD,CAAb;AACD;;AACD,SAAKW,QAAL,CAAeC,SAAD,KAAgB;AAC5BjB,MAAAA,UAAU,EAAE,CAACiB,SAAS,CAACjB;AADK,KAAhB,CAAd;AAGD;;AAEDG,EAAAA,eAAe,GAAG;AAChB,SAAKa,QAAL,CAAc;AACZhB,MAAAA,UAAU,EAAE;AADA,KAAd;AAGD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAM,KAAKE,mBAAL,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AACE,qBAAY,cADd;AAEE,MAAA,GAAG,EAAGD,UAAU,GAAGmB,cAAH,GAAoBC,cAFtC;AAGE,MAAA,GAAG,EAAC,sBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAYD;;AAxDyC;;AA2D5C,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,eAAe,EAAGT,EAAD,IAAQiB,QAAQ,CAAC3B,kBAAkB,CAACU,EAAD,CAAnB,CADO;AAExCU,EAAAA,aAAa,EAAGV,EAAD,IAAQiB,QAAQ,CAAC1B,oBAAoB,CAACS,EAAD,CAArB;AAFS,CAAf,CAA3B;;AAKAR,mBAAmB,CAAC0B,SAApB,GAAgC;AAC9BlB,EAAAA,EAAE,EAAEX,SAAS,CAAC8B,MADgB;AAE9BV,EAAAA,eAAe,EAAEpB,SAAS,CAAC+B,IAFG;AAG9BV,EAAAA,aAAa,EAAErB,SAAS,CAAC+B;AAHK,EAI9BC,UAJF;AAMA,eAAejC,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCxB,mBAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveFavoriteRecipe, removeFavoriteRecipe } from '../redux/actions/drinkActions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass DrinkFavoriteButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      whiteHeart: true,\n    };\n\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    const { whiteHeart } = this.state;\n    const favoriteCocktails = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (whiteHeart && favoriteCocktails\n      && favoriteCocktails.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    const { favoriteRecipes, id, removeRecipes } = this.props;\n    const { whiteHeart } = this.state;\n    if (whiteHeart === true) {\n      favoriteRecipes(id);\n    }\n    if (whiteHeart === false) {\n      removeRecipes(id);\n    }\n    this.setState((prevState) => ({\n      whiteHeart: !prevState.whiteHeart,\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false,\n    });\n  }\n\n  render() {\n    const { whiteHeart } = this.state;\n    return (\n      <button\n        type=\"button\"\n        onClick={ () => this.handleFavoriteClick() }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ whiteHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"favorite food button\"\n        />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  favoriteRecipes: (id) => dispatch(saveFavoriteRecipe(id)),\n  removeRecipes: (id) => dispatch(removeFavoriteRecipe(id)),\n});\n\nDrinkFavoriteButton.propTypes = {\n  id: PropTypes.number,\n  favoriteRecipes: PropTypes.func,\n  removeRecipes: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(DrinkFavoriteButton);\n"]},"metadata":{},"sourceType":"module"}