{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkCategories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchDrinkListByCategory, updateCategory, fetchDrinkList } from '../redux/actions/drinkActions';\n\nclass DrinkCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const {\n      actionFetchDrinkList,\n      actionUpdateCategory\n    } = this.props;\n    actionUpdateCategory('All');\n    actionFetchDrinkList('');\n  }\n\n  filterByCategory(category) {\n    const {\n      actionFetchDrinkByCategory,\n      selectedCategory\n    } = this.props;\n\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchDrinkByCategory(category);\n    }\n  }\n\n  render() {\n    const {\n      drinkCategories\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-dark\",\n      className: \"category-buttons\",\n      type: \"button\",\n      name: \"category\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: this.filterByAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"All\"), drinkCategories.map(item => /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-dark\",\n      className: \"category-buttons\",\n      type: \"button\",\n      name: \"category\",\n      key: item.strCategory,\n      \"data-testid\": `${item.strCategory}-category-filter`,\n      onClick: () => this.filterByCategory(item.strCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, item.strCategory)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drinkCategories: state.drinkReducer.drinkCategoriesList,\n  selectedCategory: state.drinkReducer.selectedCategory\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actionFetchDrinkByCategory: category => dispatch(fetchDrinkListByCategory(category)),\n  actionFetchDrinkList: name => dispatch(fetchDrinkList(name)),\n  actionUpdateCategory: category => dispatch(updateCategory(category))\n});\n\nDrinkCategories.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchDrinkByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  drinkCategories: PropTypes.array,\n  selectedCategory: PropTypes.array\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkCategories);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkCategories.js"],"names":["React","Component","connect","PropTypes","Button","fetchDrinkListByCategory","updateCategory","fetchDrinkList","DrinkCategories","constructor","filterByAll","bind","filterByCategory","actionFetchDrinkList","actionUpdateCategory","props","category","actionFetchDrinkByCategory","selectedCategory","render","drinkCategories","map","item","strCategory","mapStateToProps","state","drinkReducer","drinkCategoriesList","mapDispatchToProps","dispatch","name","propTypes","func","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { fetchDrinkListByCategory, updateCategory, fetchDrinkList,\n} from '../redux/actions/drinkActions';\n\nclass DrinkCategories extends Component {\n  constructor() {\n    super();\n    this.filterByAll = this.filterByAll.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n  }\n\n  filterByAll() {\n    const { actionFetchDrinkList, actionUpdateCategory } = this.props;\n    actionUpdateCategory('All');\n    actionFetchDrinkList('');\n  }\n\n  filterByCategory(category) {\n    const { actionFetchDrinkByCategory, selectedCategory } = this.props;\n    if (category === selectedCategory) {\n      this.filterByAll();\n    } else {\n      actionFetchDrinkByCategory(category);\n    }\n  }\n\n  render() {\n    const { drinkCategories } = this.props;\n    return (\n      <div className=\"category-div\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-dark\"\n          className=\"category-buttons\"\n          type=\"button\"\n          name=\"category\"\n          data-testid=\"All-category-filter\"\n          onClick={ this.filterByAll }\n        >\n          All\n        </Button>\n        { drinkCategories.map((item) => (\n          <Button\n            size=\"sm\"\n            variant=\"outline-dark\"\n            className=\"category-buttons\"\n            type=\"button\"\n            name=\"category\"\n            key={ item.strCategory }\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ () => this.filterByCategory(item.strCategory) }\n          >\n            { item.strCategory }\n          </Button>\n        )) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkCategories: state.drinkReducer.drinkCategoriesList,\n  selectedCategory: state.drinkReducer.selectedCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchDrinkByCategory: (category) => dispatch(fetchDrinkListByCategory(category)),\n  actionFetchDrinkList: (name) => dispatch(fetchDrinkList(name)),\n  actionUpdateCategory: (category) => dispatch(updateCategory(category)),\n});\n\nDrinkCategories.propTypes = {\n  actionFetchDrinkList: PropTypes.func,\n  actionFetchDrinkByCategory: PropTypes.func,\n  actionUpdateCategory: PropTypes.func,\n  drinkCategories: PropTypes.array,\n  selectedCategory: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkCategories);\n"]},"metadata":{},"sourceType":"module"}