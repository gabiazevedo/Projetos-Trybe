{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreDrinksIngredients.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { drinkIngredients, renderDrinkIngredient } from '../redux/actions/drinkActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreDrinksIngredients extends Component {\n  componentDidMount() {\n    const {\n      actionfetchDrinkIngredient\n    } = this.props;\n    actionfetchDrinkIngredient();\n  }\n\n  renderDrinkIngredient(ingredient) {\n    const {\n      history,\n      actionDrinkIngredient\n    } = this.props;\n    actionDrinkIngredient(ingredient);\n    history.push('/bebidas');\n  }\n\n  render() {\n    const {\n      fetchDrinkIngredients\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Explorar Ingredientes\",\n      search: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, fetchDrinkIngredients.map((item, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: item.strIngredient1,\n      \"data-testid\": `${index}-ingredient-card`,\n      onClick: () => this.renderDrinkIngredient(item.strIngredient1),\n      key: item.strIngredient1,\n      \"data-testid\": `${index}-ingredient-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png`,\n      alt: \"Drink Ingredients\",\n      \"data-testid\": `${index}-card-img`,\n      height: \"200px\",\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, item.strIngredient1)))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fetchDrinkIngredients: state.drinkReducer.drinkIngredients\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actionfetchDrinkIngredient: () => dispatch(drinkIngredients()),\n  actionDrinkIngredient: ingredient => dispatch(renderDrinkIngredient(ingredient))\n});\n\nExploreDrinksIngredients.propTypes = {\n  fetchDrinkIngredients: PropTypes.arrayOf(PropTypes.string),\n  actionfetchDrinkIngredient: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreDrinksIngredients);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreDrinksIngredients.js"],"names":["React","Component","connect","PropTypes","drinkIngredients","renderDrinkIngredient","Header","Footer","ExploreDrinksIngredients","componentDidMount","actionfetchDrinkIngredient","props","ingredient","history","actionDrinkIngredient","push","render","fetchDrinkIngredients","map","item","index","strIngredient1","mapStateToProps","state","drinkReducer","mapDispatchToProps","dispatch","propTypes","arrayOf","string","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EACEC,qBADF,QAC+B,+BAD/B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,wBAAN,SAAuCP,SAAvC,CAAiD;AAC/CQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAiC,KAAKC,KAA5C;AACAD,IAAAA,0BAA0B;AAC3B;;AAEDL,EAAAA,qBAAqB,CAACO,UAAD,EAAa;AAChC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqC,KAAKH,KAAhD;AACAG,IAAAA,qBAAqB,CAACF,UAAD,CAArB;AACAC,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAA4B,KAAKN,KAAvC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,uBAAd;AAAsC,MAAA,MAAM,EAAG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIM,qBAAqB,CAACC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,kBAC1B;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGD,IAAI,CAACE,cAFb;AAGE,qBAAe,GAAED,KAAM,kBAHzB;AAIE,MAAA,OAAO,EAAG,MAAM,KAAKf,qBAAL,CAA2Bc,IAAI,CAACE,cAAhC,CAJlB;AAKE,MAAA,GAAG,EAAGF,IAAI,CAACE,cALb;AAME,qBAAe,GAAED,KAAM,kBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AACE,MAAA,GAAG,EAAI,oDAAmDD,IAAI,CAACE,cAAe,YADhF;AAEE,MAAA,GAAG,EAAC,mBAFN;AAGE,qBAAe,GAAED,KAAM,WAHzB;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAeE;AAAG,qBAAe,GAAEA,KAAM,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,IAAI,CAACE,cAA/C,CAfF,CADA,CADJ,CAFF,eAuBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AAzC8C;;AA4CjD,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,qBAAqB,EAAEM,KAAK,CAACC,YAAN,CAAmBpB;AADR,CAAZ,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAACtB,gBAAgB,EAAjB,CADF;AAExCU,EAAAA,qBAAqB,EAAGF,UAAD,IAAgBc,QAAQ,CAACrB,qBAAqB,CAACO,UAAD,CAAtB;AAFP,CAAf,CAA3B;;AAKAJ,wBAAwB,CAACmB,SAAzB,GAAqC;AACnCV,EAAAA,qBAAqB,EAAEd,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,CADY;AAEnCnB,EAAAA,0BAA0B,EAAEP,SAAS,CAAC2B;AAFH,EAGnCC,UAHF;AAKA,eAAe7B,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,wBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { drinkIngredients,\n  renderDrinkIngredient } from '../redux/actions/drinkActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreDrinksIngredients extends Component {\n  componentDidMount() {\n    const { actionfetchDrinkIngredient } = this.props;\n    actionfetchDrinkIngredient();\n  }\n\n  renderDrinkIngredient(ingredient) {\n    const { history, actionDrinkIngredient } = this.props;\n    actionDrinkIngredient(ingredient);\n    history.push('/bebidas');\n  }\n\n  render() {\n    const { fetchDrinkIngredients } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Ingredientes\" search={ false } />\n        <ul>\n          { fetchDrinkIngredients.map((item, index) => (\n            <button\n              type=\"button\"\n              key={ item.strIngredient1 }\n              data-testid={ `${index}-ingredient-card` }\n              onClick={ () => this.renderDrinkIngredient(item.strIngredient1) }\n              key={ item.strIngredient1 }\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <img\n                src={ `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png` }\n                alt=\"Drink Ingredients\"\n                data-testid={ `${index}-card-img` }\n                height=\"200px\"\n                width=\"200px\"\n              />\n              <p data-testid={ `${index}-card-name` }>{ item.strIngredient1 }</p>\n            </button>\n          )) }\n        </ul>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fetchDrinkIngredients: state.drinkReducer.drinkIngredients,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionfetchDrinkIngredient: () => dispatch(drinkIngredients()),\n  actionDrinkIngredient: (ingredient) => dispatch(renderDrinkIngredient(ingredient)),\n});\n\nExploreDrinksIngredients.propTypes = {\n  fetchDrinkIngredients: PropTypes.arrayOf(PropTypes.string),\n  actionfetchDrinkIngredient: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreDrinksIngredients);\n"]},"metadata":{},"sourceType":"module"}