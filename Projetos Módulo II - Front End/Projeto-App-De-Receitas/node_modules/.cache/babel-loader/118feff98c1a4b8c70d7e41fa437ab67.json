{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FavoriteButton.js\";\nimport React, { Component } from 'react';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\n\nclass FavoriteButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      whiteHeart: true\n    };\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favoriteMeals && favoriteMeals.find(item => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    this.setState(prevState => ({\n      whiteHeart: !prevState.whiteHeart\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false\n    });\n  }\n\n  render() {\n    const {\n      whiteHeart\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      onClick: () => this.handleFavoriteClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: whiteHeart ? whiteHeartIcon : blackHeartIcon,\n      alt: \"favorite food button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default FavoriteButton;","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/FavoriteButton.js"],"names":["React","Component","FavoriteButton","constructor","state","whiteHeart","handleFavoriteClick","bind","setFavoriteIcon","componentDidMount","id","props","favoriteMeals","JSON","parse","localStorage","getItem","find","item","setState","prevState","render","whiteHeartIcon","blackHeartIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;AACA,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAtB;;AACA,QAAIJ,aAAa,IAAIA,aAAa,CAACK,IAAd,CAAoBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAAzC,CAArB,EAAmE;AACjE,WAAKF,eAAL;AACD;AACF;;AAEDF,EAAAA,mBAAmB,GAAG;AACpB,SAAKa,QAAL,CAAeC,SAAD,KAAgB;AAC5Bf,MAAAA,UAAU,EAAE,CAACe,SAAS,CAACf;AADK,KAAhB,CAAd;AAGD;;AAEDG,EAAAA,eAAe,GAAG;AAChB,SAAKW,QAAL,CAAc;AACZd,MAAAA,UAAU,EAAE;AADA,KAAd;AAGD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,cAFd;AAGE,MAAA,OAAO,EAAG,MAAM,KAAKE,mBAAL,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EAAGD,UAAU,GAAGiB,cAAH,GAAoBC,cADtC;AAEE,MAAA,GAAG,EAAC,sBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAYD;;AA9CoC;;AAiDvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass FavoriteButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      whiteHeart: true,\n    };\n\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.setFavoriteIcon = this.setFavoriteIcon.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    const favoriteMeals = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteMeals && favoriteMeals.find((item) => item.id === id)) {\n      this.setFavoriteIcon();\n    }\n  }\n\n  handleFavoriteClick() {\n    this.setState((prevState) => ({\n      whiteHeart: !prevState.whiteHeart,\n    }));\n  }\n\n  setFavoriteIcon() {\n    this.setState({\n      whiteHeart: false,\n    });\n  }\n\n  render() {\n    const { whiteHeart } = this.state;\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        onClick={ () => this.handleFavoriteClick() }\n      >\n        <img\n          src={ whiteHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"favorite food button\"\n        />\n      </button>\n    );\n  }\n}\n\nexport default FavoriteButton;\n"]},"metadata":{},"sourceType":"module"}