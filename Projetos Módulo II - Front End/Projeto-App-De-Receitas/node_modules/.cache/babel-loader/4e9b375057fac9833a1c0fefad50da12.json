{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkDetailsCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport DrinkShareButton from './DrinkShareButton';\nimport DrinkFavoriteButton from './DrinkFavoriteButton';\nimport '../FoodAndDrinkDetails.css';\n\nclass DrinkDetailsCard extends Component {\n  render() {\n    const {\n      drinkDetails\n    } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n\n    if (array[0].length > 0) {\n      ingredients = array[0].filter(item => item[0].includes('strIngredient')).filter(item => item[1]).map(item => item[1]);\n      measurements = array[0].filter(item => item[0].includes('strMeasure')).filter(item => item[1]).map(item => item[1]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '16rem'\n      },\n      className: \"drink-details-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      height: \"250px\",\n      width: \"300px\",\n      \"data-testid\": \"recipe-photo\",\n      src: drinkDetails.strDrinkThumb,\n      alt: \"Foto do prato\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"recipe-title\",\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, drinkDetails.strDrink), /*#__PURE__*/React.createElement(DrinkShareButton, {\n      test: \"share-btn\",\n      id: drinkDetails.idDrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(DrinkFavoriteButton, {\n      test: \"favorite-btn\",\n      id: drinkDetails.idDrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, drinkDetails.strAlcoholic), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, ingredients.map((item, index) => item ? /*#__PURE__*/React.createElement(\"li\", {\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, `${item} - ${measurements[index]}`) : '')), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, drinkDetails.strInstructions))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drinkDetails: state.drinkReducer.drinkDetails\n});\n\nDrinkDetailsCard.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string\n  }).isRequired\n};\nexport default connect(mapStateToProps)(DrinkDetailsCard);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/components/DrinkDetailsCard.js"],"names":["React","Component","PropTypes","connect","Card","DrinkShareButton","DrinkFavoriteButton","DrinkDetailsCard","render","drinkDetails","props","ingredients","measurements","array","Array","of","Object","entries","length","filter","item","includes","map","width","strDrinkThumb","strDrink","idDrink","strAlcoholic","index","strInstructions","mapStateToProps","state","drinkReducer","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport DrinkShareButton from './DrinkShareButton';\nimport DrinkFavoriteButton from './DrinkFavoriteButton';\nimport '../FoodAndDrinkDetails.css';\n\nclass DrinkDetailsCard extends Component {\n  render() {\n    const { drinkDetails } = this.props;\n    let ingredients = [];\n    let measurements = [];\n    const array = Array.of(Object.entries(drinkDetails));\n    if (array[0].length > 0) {\n      ingredients = array[0].filter((item) => item[0].includes('strIngredient'))\n        .filter((item) => item[1]).map((item) => item[1]);\n      measurements = array[0].filter((item) => item[0].includes('strMeasure'))\n        .filter((item) => item[1]).map((item) => item[1]);\n    }\n    return (\n      <div className=\"div-details\">\n        <Card\n          style={ { width: '16rem' } }\n          className=\"drink-details-card\"\n        >\n          <Card.Img\n            variant=\"top\"\n            height=\"250px\"\n            width=\"300px\"\n            data-testid=\"recipe-photo\"\n            src={ drinkDetails.strDrinkThumb }\n            alt=\"Foto do prato\"\n          />\n          <Card.Body>\n            <Card.Title\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { drinkDetails.strDrink }\n            </Card.Title>\n            <DrinkShareButton test=\"share-btn\" id={ drinkDetails.idDrink } />\n            <DrinkFavoriteButton test=\"favorite-btn\" id={ drinkDetails.idDrink } />\n            <p data-testid=\"recipe-category\">{ drinkDetails.strAlcoholic }</p>\n            <ul>\n              { ingredients\n                .map((item, index) => (item\n                  ? (\n                    <li\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                      key={ index }\n                    >\n                      {`${item} - ${measurements[index]}`}\n                    </li>)\n                  : ''))}\n            </ul>\n            <p\n              data-testid=\"instructions\"\n            >\n              { drinkDetails.strInstructions }\n            </p>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkDetails: state.drinkReducer.drinkDetails,\n});\n\nDrinkDetailsCard.propTypes = {\n  drinkDetails: PropTypes.shape({\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n    strInstructions: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(DrinkDetailsCard);\n"]},"metadata":{},"sourceType":"module"}