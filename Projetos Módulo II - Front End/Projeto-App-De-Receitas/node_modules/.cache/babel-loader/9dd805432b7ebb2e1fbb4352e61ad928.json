{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreFoodIngredients.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { foodIngredient, renderFoodIngredient } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreFoodIngredients extends Component {\n  componentDidMount() {\n    const {\n      actionfetchFoodIngredient\n    } = this.props;\n    actionfetchFoodIngredient();\n  }\n\n  redirectFoodIngredient(ingredient) {\n    const {\n      history,\n      actionFoodIngredient\n    } = this.props;\n    actionFoodIngredient(ingredient);\n    history.push('/comidas');\n  }\n\n  render() {\n    const {\n      fetchFoodIngredient\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Explorar Ingredientes\",\n      search: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, fetchFoodIngredient.map((item, index) => /*#__PURE__*/React.createElement(\"a\", {\n      key: item.idIngredient,\n      \"data-testid\": `${index}-ingredient-card`,\n      onClick: () => this.redirectFoodIngredient(item.strIngredient),\n      onKeyDown: () => this.redirectFoodIngredient(item.strIngredient),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png`,\n      alt: \"Food Ingredients\",\n      \"data-testid\": `${index}-card-img`,\n      height: \"200px\",\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, item.strIngredient)))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fetchFoodIngredient: state.foodReducer.foodIngredients\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actionfetchFoodIngredient: () => dispatch(foodIngredient()),\n  actionFoodIngredient: ingredient => dispatch(renderFoodIngredient(ingredient))\n});\n\nExploreFoodIngredients.propTypes = {\n  fetchFoodIngredient: PropTypes.arrayOf(PropTypes.string),\n  actionfetchFoodIngredient: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodIngredients);","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/pages/ExploreFoodIngredients.js"],"names":["React","Component","connect","PropTypes","foodIngredient","renderFoodIngredient","Header","Footer","ExploreFoodIngredients","componentDidMount","actionfetchFoodIngredient","props","redirectFoodIngredient","ingredient","history","actionFoodIngredient","push","render","fetchFoodIngredient","map","item","index","idIngredient","strIngredient","mapStateToProps","state","foodReducer","foodIngredients","mapDispatchToProps","dispatch","propTypes","arrayOf","string","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,8BAArD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,sBAAN,SAAqCP,SAArC,CAA+C;AAC7CQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAgC,KAAKC,KAA3C;AACAD,IAAAA,yBAAyB;AAC1B;;AAEDE,EAAAA,sBAAsB,CAACC,UAAD,EAAa;AACjC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoC,KAAKJ,KAA/C;AACAI,IAAAA,oBAAoB,CAACF,UAAD,CAApB;AACAC,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAA0B,KAAKP,KAArC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,uBAAd;AAAsC,MAAA,MAAM,EAAG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIO,mBAAmB,CAACC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACxB;AACE,MAAA,GAAG,EAAGD,IAAI,CAACE,YADb;AAEE,qBAAe,GAAED,KAAM,kBAFzB;AAGE,MAAA,OAAO,EAAG,MAAM,KAAKT,sBAAL,CAA4BQ,IAAI,CAACG,aAAjC,CAHlB;AAIE,MAAA,SAAS,EAAG,MAAM,KAAKX,sBAAL,CAA4BQ,IAAI,CAACG,aAAjC,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,GAAG,EAAI,gDAA+CH,IAAI,CAACG,aAAc,YAD3E;AAEE,MAAA,GAAG,EAAC,kBAFN;AAGE,qBAAe,GAAEF,KAAM,WAHzB;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAaE;AAAG,qBAAe,GAAEA,KAAM,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,IAAI,CAACG,aAA/C,CAbF,CADA,CADJ,CAFF,eAqBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD;;AAvC4C;;AA0C/C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,mBAAmB,EAAEO,KAAK,CAACC,WAAN,CAAkBC;AADL,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,yBAAyB,EAAE,MAAMmB,QAAQ,CAACzB,cAAc,EAAf,CADD;AAExCW,EAAAA,oBAAoB,EAAGF,UAAD,IAAgBgB,QAAQ,CAACxB,oBAAoB,CAACQ,UAAD,CAArB;AAFN,CAAf,CAA3B;;AAKAL,sBAAsB,CAACsB,SAAvB,GAAmC;AACjCZ,EAAAA,mBAAmB,EAAEf,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,CADY;AAEjCtB,EAAAA,yBAAyB,EAAEP,SAAS,CAAC8B;AAFJ,EAGjCC,UAHF;AAKA,eAAehC,OAAO,CAACsB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,sBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { foodIngredient, renderFoodIngredient } from '../redux/actions/foodActions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass ExploreFoodIngredients extends Component {\n  componentDidMount() {\n    const { actionfetchFoodIngredient } = this.props;\n    actionfetchFoodIngredient();\n  }\n\n  redirectFoodIngredient(ingredient) {\n    const { history, actionFoodIngredient } = this.props;\n    actionFoodIngredient(ingredient);\n    history.push('/comidas');\n  }\n\n  render() {\n    const { fetchFoodIngredient } = this.props;\n    return (\n      <div>\n        <Header title=\"Explorar Ingredientes\" search={ false } />\n        <ul>\n          { fetchFoodIngredient.map((item, index) => (\n            <a\n              key={ item.idIngredient }\n              data-testid={ `${index}-ingredient-card` }\n              onClick={ () => this.redirectFoodIngredient(item.strIngredient) }\n              onKeyDown={ () => this.redirectFoodIngredient(item.strIngredient) }\n            >\n              <img\n                src={ `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png` }\n                alt=\"Food Ingredients\"\n                data-testid={ `${index}-card-img` }\n                height=\"200px\"\n                width=\"200px\"\n              />\n              <p data-testid={ `${index}-card-name` }>{ item.strIngredient }</p>\n            </a>\n          ))}\n        </ul>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fetchFoodIngredient: state.foodReducer.foodIngredients,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionfetchFoodIngredient: () => dispatch(foodIngredient()),\n  actionFoodIngredient: (ingredient) => dispatch(renderFoodIngredient(ingredient)),\n});\n\nExploreFoodIngredients.propTypes = {\n  fetchFoodIngredient: PropTypes.arrayOf(PropTypes.string),\n  actionfetchFoodIngredient: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodIngredients);\n"]},"metadata":{},"sourceType":"module"}