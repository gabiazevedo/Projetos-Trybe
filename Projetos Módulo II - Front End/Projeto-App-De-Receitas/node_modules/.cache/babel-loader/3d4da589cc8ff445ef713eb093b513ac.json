{"ast":null,"code":"import { fetchAPIName, fetchAPICategory, fetchAPICategoryFilter, fetchAPIByID, fetchDrinkRandom, fetchDrinkIngredient, fetchDrinkIngredientSearch } from '../../services/fetchAPIDrink';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIFood';\nexport const DRINK_LIST_SUCCESS = 'DRINK_LIST_SUCCESS';\nexport const DRINK_CATEGORY_SUCCESS = 'DRINK_CATEGORY_SUCCESS';\nexport const DRINK_LIST_CATEGORY_SUCCESS = 'DRINK_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const DRINK_DETAILS_ID_SUCCESS = 'DRINK_DETAILS_ID_SUCCESS';\nexport const FOOD_RECOMENDATIONS_SUCCESS = 'FOOD_RECOMENDATIONS_SUCCESS';\nexport const DRINK_INGREDIENTS = 'DRINK_INGREDIENTS';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_DRINK_INGREDIENTS = 'RENDER_DRINK_INGREDIENTS';\nexport const drinkListSuccess = payload => ({\n  type: DRINK_LIST_SUCCESS,\n  payload\n});\nexport const fetchDrinkList = name => async dispatch => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(drinkListSuccess(returnFetch));\n};\n\nconst drinkCategorySuccess = payload => ({\n  type: DRINK_CATEGORY_SUCCESS,\n  payload\n});\n\nexport const fetchDrinkCategory = category => async dispatch => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(drinkCategorySuccess(returnFetch));\n};\n\nconst drinkListByCategorySuccess = payload => ({\n  type: DRINK_LIST_CATEGORY_SUCCESS,\n  payload\n});\n\nexport const updateCategory = payload => ({\n  type: UPDATE_CATEGORY,\n  payload\n});\nexport const fetchDrinkListByCategory = category => async dispatch => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(drinkListByCategorySuccess(returnFetch));\n};\n\nconst drinkDetailsIDSuccess = payload => ({\n  type: DRINK_DETAILS_ID_SUCCESS,\n  payload\n});\n\nexport const fetchDrinkID = id => async dispatch => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(drinkDetailsIDSuccess(returnFetch));\n};\n\nconst foodRecomendations = payload => ({\n  type: FOOD_RECOMENDATIONS_SUCCESS,\n  payload\n});\n\nexport const fetchFoodRecomendations = name => async dispatch => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(foodRecomendations(returnFetch));\n};\nexport const saveFavoritesRedux = payload => ({\n  type: SAVE_FAVORITES,\n  payload\n});\nexport const saveFavoriteRecipe = id => async dispatch => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n    dispatch(saveFavoritesRedux(genericObj));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    dispatch(saveFavoritesRedux(newFavoriteRecipes));\n  }\n};\nexport const removeFavoriteRecipe = id => dispatch => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes.filter(item => !(item.id === id && item.type === 'bebida'));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  dispatch(saveFavoritesRedux(newFavoriteRecipes));\n};\nexport const randomDrinkId = () => async () => {\n  const returnFetch = await fetchDrinkRandom();\n  return returnFetch;\n};\n\nconst searchDrinkIngredients = payload => ({\n  type: DRINK_INGREDIENTS,\n  payload\n});\n\nexport const drinkIngredients = () => async dispatch => {\n  const returnFetch = await fetchDrinkIngredient();\n  dispatch(searchDrinkIngredients(returnFetch));\n};\nexport const renderDrinkIngredient = payload => ({\n  type: RENDER_DRINK_INGREDIENTS,\n  payload\n});\nexport const fetchDrinkIngredientList = ingredient => async dispatch => {\n  const returnFetch = await fetchDrinkIngredientSearch(ingredient);\n  dispatch(drinkListSuccess(returnFetch));\n};\nexport const saveDoneRecipe = id => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const date = new Date();\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb,\n    doneDate: date.toLocaleDateString('pt-BR'),\n    tags: returnFetch[0].strTags ? returnFetch[0].strTags.split(',') : ''\n  };\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  if (doneRecipes === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newDoneRecipes = [...doneRecipes, genericObj];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipes));\n  }\n};","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/sd-011-project-recipes-app/src/redux/actions/drinkActions.js"],"names":["fetchAPIName","fetchAPICategory","fetchAPICategoryFilter","fetchAPIByID","fetchDrinkRandom","fetchDrinkIngredient","fetchDrinkIngredientSearch","fetchRecomendations","DRINK_LIST_SUCCESS","DRINK_CATEGORY_SUCCESS","DRINK_LIST_CATEGORY_SUCCESS","UPDATE_CATEGORY","DRINK_DETAILS_ID_SUCCESS","FOOD_RECOMENDATIONS_SUCCESS","DRINK_INGREDIENTS","SAVE_FAVORITES","RENDER_DRINK_INGREDIENTS","drinkListSuccess","payload","type","fetchDrinkList","name","dispatch","returnFetch","drinkCategorySuccess","fetchDrinkCategory","category","drinkListByCategorySuccess","updateCategory","fetchDrinkListByCategory","drinkDetailsIDSuccess","fetchDrinkID","id","foodRecomendations","fetchFoodRecomendations","saveFavoritesRedux","saveFavoriteRecipe","genericObj","idDrink","area","strCategory","alcoholicOrNot","strAlcoholic","strDrink","image","strDrinkThumb","favoriteRecipes","JSON","parse","localStorage","getItem","setItem","stringify","newFavoriteRecipes","removeFavoriteRecipe","filter","item","randomDrinkId","searchDrinkIngredients","drinkIngredients","renderDrinkIngredient","fetchDrinkIngredientList","ingredient","saveDoneRecipe","date","Date","doneDate","toLocaleDateString","tags","strTags","split","doneRecipes","newDoneRecipes"],"mappings":"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","sourcesContent":["import { fetchAPIName, fetchAPICategory,\n  fetchAPICategoryFilter, fetchAPIByID,\n  fetchDrinkRandom, fetchDrinkIngredient,\n  fetchDrinkIngredientSearch } from '../../services/fetchAPIDrink';\nimport { fetchAPIName as fetchRecomendations } from '../../services/fetchAPIFood';\n\nexport const DRINK_LIST_SUCCESS = 'DRINK_LIST_SUCCESS';\nexport const DRINK_CATEGORY_SUCCESS = 'DRINK_CATEGORY_SUCCESS';\nexport const DRINK_LIST_CATEGORY_SUCCESS = 'DRINK_LIST_CATEGORY_SUCCESS';\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport const DRINK_DETAILS_ID_SUCCESS = 'DRINK_DETAILS_ID_SUCCESS';\nexport const FOOD_RECOMENDATIONS_SUCCESS = 'FOOD_RECOMENDATIONS_SUCCESS';\nexport const DRINK_INGREDIENTS = 'DRINK_INGREDIENTS';\nexport const SAVE_FAVORITES = 'SAVE_FAVORITES';\nexport const RENDER_DRINK_INGREDIENTS = 'RENDER_DRINK_INGREDIENTS';\n\nexport const drinkListSuccess = (payload) => ({\n  type: DRINK_LIST_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkList = (name) => async (dispatch) => {\n  const returnFetch = await fetchAPIName(name);\n  dispatch(drinkListSuccess(returnFetch));\n};\n\nconst drinkCategorySuccess = (payload) => ({\n  type: DRINK_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkCategory = (category) => async (dispatch) => {\n  const returnFetch = await fetchAPICategory(category);\n  dispatch(drinkCategorySuccess(returnFetch));\n};\n\nconst drinkListByCategorySuccess = (payload) => ({\n  type: DRINK_LIST_CATEGORY_SUCCESS,\n  payload,\n});\n\nexport const updateCategory = (payload) => ({\n  type: UPDATE_CATEGORY,\n  payload,\n});\n\nexport const fetchDrinkListByCategory = (category) => async (dispatch) => {\n  dispatch(updateCategory(category));\n  const returnFetch = await fetchAPICategoryFilter(category);\n  dispatch(drinkListByCategorySuccess(returnFetch));\n};\n\nconst drinkDetailsIDSuccess = (payload) => ({\n  type: DRINK_DETAILS_ID_SUCCESS,\n  payload,\n});\n\nexport const fetchDrinkID = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  dispatch(drinkDetailsIDSuccess(returnFetch));\n};\n\nconst foodRecomendations = (payload) => ({\n  type: FOOD_RECOMENDATIONS_SUCCESS,\n  payload,\n});\n\nexport const fetchFoodRecomendations = (name) => async (dispatch) => {\n  const returnFetch = await fetchRecomendations(name);\n  dispatch(foodRecomendations(returnFetch));\n};\n\nexport const saveFavoritesRedux = (payload) => ({\n  type: SAVE_FAVORITES,\n  payload,\n});\n\nexport const saveFavoriteRecipe = (id) => async (dispatch) => {\n  const returnFetch = await fetchAPIByID(id);\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb,\n  };\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([genericObj]));\n    dispatch(saveFavoritesRedux(genericObj));\n  } else {\n    const newFavoriteRecipes = [...favoriteRecipes, genericObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    dispatch(saveFavoritesRedux(newFavoriteRecipes));\n  }\n};\n\nexport const removeFavoriteRecipe = (id) => (dispatch) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavoriteRecipes = favoriteRecipes\n    .filter((item) => !(item.id === id && item.type === 'bebida'));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  dispatch(saveFavoritesRedux(newFavoriteRecipes));\n};\n\nexport const randomDrinkId = () => async () => {\n  const returnFetch = await fetchDrinkRandom();\n  return returnFetch;\n};\n\nconst searchDrinkIngredients = (payload) => ({\n  type: DRINK_INGREDIENTS,\n  payload,\n});\n\nexport const drinkIngredients = () => async (dispatch) => {\n  const returnFetch = await fetchDrinkIngredient();\n  dispatch(searchDrinkIngredients(returnFetch));\n};\n\nexport const renderDrinkIngredient = (payload) => ({\n  type: RENDER_DRINK_INGREDIENTS,\n  payload,\n});\n\nexport const fetchDrinkIngredientList = (ingredient) => async (dispatch) => {\n  const returnFetch = await fetchDrinkIngredientSearch(ingredient);\n  dispatch(drinkListSuccess(returnFetch));\n};\n\nexport const saveDoneRecipe = (id) => async () => {\n  const returnFetch = await fetchAPIByID(id);\n  const date = new Date();\n  const genericObj = {\n    id: returnFetch[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: returnFetch[0].strCategory,\n    alcoholicOrNot: returnFetch[0].strAlcoholic,\n    name: returnFetch[0].strDrink,\n    image: returnFetch[0].strDrinkThumb,\n    doneDate: date.toLocaleDateString('pt-BR'),\n    tags: returnFetch[0].strTags ? returnFetch[0].strTags.split(',') : '',\n  };\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (doneRecipes === null) {\n    localStorage.setItem('doneRecipes', JSON.stringify([genericObj]));\n  } else {\n    const newDoneRecipes = [...doneRecipes, genericObj];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipes));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}