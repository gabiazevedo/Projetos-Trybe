{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/Projetos-Trybe/Projetos M\\xF3dulo II - Front End/Projeto-Movie-Cards-Library-CRUD-Bloco-13/movie-cards-lirary-CRUD/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovie, deleteMovie } from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    getMovie(id).then(movie => {\n      this.bringDetails(movie);\n    });\n  }\n\n  bringDetails(movie) {\n    this.setState({\n      movie,\n      loading: false\n    });\n  }\n\n  async removeMovie(id) {\n    await deleteMovie(id);\n  }\n\n  render() {\n    const {\n      movie,\n      loading\n    } = this.state;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    });\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      year,\n      director,\n      id\n    } = movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      className: \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      width: \"300px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, `${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, `Diretor: ${director}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, `Sinopse: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, `Gênero: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, `Ano de Lançamento: ${year}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      onClick: () => this.removeMovie(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"DELETAR\")));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: {\n      id: PropTypes.number\n    }\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/Projetos-Trybe/Projetos Módulo II - Front End/Projeto-Movie-Cards-Library-CRUD-Bloco-13/movie-cards-lirary-CRUD/src/pages/MovieDetails.js"],"names":["React","Component","Link","PropTypes","getMovie","deleteMovie","Loading","MovieDetails","constructor","state","movie","loading","componentDidMount","match","props","params","id","then","bringDetails","setState","removeMovie","render","title","storyline","imagePath","genre","year","director","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,sBAAtC;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASD,MAAf;AAEAX,IAAAA,QAAQ,CAACY,EAAD,CAAR,CAAaC,IAAb,CAAmBP,KAAD,IAAW;AAC3B,WAAKQ,YAAL,CAAkBR,KAAlB;AACD,KAFD;AAGD;;AAEDQ,EAAAA,YAAY,CAACR,KAAD,EAAQ;AAClB,SAAKS,QAAL,CAAc;AACZT,MAAAA,KADY;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEgB,QAAXS,WAAW,CAACJ,EAAD,EAAK;AACpB,UAAMX,WAAW,CAACW,EAAD,CAAjB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AACA,QAAIE,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEb,UAAM;AAAEW,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA,IAAtC;AAA4CC,MAAAA,QAA5C;AAAsDX,MAAAA;AAAtD,QAA6DN,KAAnE;AAEA,wBACE;AAAK,qBAAY,eAAjB;AAAiC,MAAA,SAAS,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAI,MAAKc,SAAU,EAA7C;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,GAAEF,KAAM,EAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,YAAWK,QAAS,EAA1B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,YAAWJ,SAAU,EAA3B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,WAAUE,KAAM,EAAtB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,sBAAqBC,IAAK,EAAhC,CANF,eAOE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI,WAAUV,EAAG,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,OAAO,EAAG,MAAM,KAAKI,WAAL,CAAiBJ,EAAjB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAPF,CADF;AAeD;;AApDkC;;AAuDrCT,YAAY,CAACqB,SAAb,GAAyB;AACvBf,EAAAA,KAAK,EAAEV,SAAS,CAAC0B,KAAV,CAAgB;AACrBd,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAEb,SAAS,CAAC2B;AADR;AADa,GAAhB,EAIJC;AALoB,CAAzB;AAQA,eAAexB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovie, deleteMovie } from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n\n    getMovie(id).then((movie) => {\n      this.bringDetails(movie);\n    });\n  }\n\n  bringDetails(movie) {\n    this.setState({\n      movie,\n      loading: false,\n    });\n  }\n\n  async removeMovie(id) {\n    await deleteMovie(id);\n  }\n\n  render() {\n    const { movie, loading } = this.state;\n    if (loading) return <Loading />;\n\n    const { title, storyline, imagePath, genre, year, director, id } = movie;\n\n    return (\n      <div data-testid=\"movie-details\" className=\"movie-details\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } width=\"300px\" />\n        <p>{`${title}`}</p>\n        <p>{ `Diretor: ${director}` }</p>\n        <p>{ `Sinopse: ${storyline}` }</p>\n        <p>{ `Gênero: ${genre}` }</p>\n        <p>{ `Ano de Lançamento: ${year}` }</p>\n        <div className=\"buttons\">\n          <Link to=\"/\">VOLTAR</Link>\n          <Link to={ `/movies/${id}/edit` }>EDITAR</Link>\n          <Link to=\"/\" onClick={ () => this.removeMovie(id) }>DELETAR</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: {\n      id: PropTypes.number,\n    },\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}