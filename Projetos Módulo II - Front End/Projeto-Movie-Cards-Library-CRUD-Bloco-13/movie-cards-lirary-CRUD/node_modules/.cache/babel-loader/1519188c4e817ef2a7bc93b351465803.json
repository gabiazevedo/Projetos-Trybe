{"ast":null,"code":"var _jsxFileName = \"/home/gabiazevedo/Trybe/Projetos-Trybe/Projetos M\\xF3dulo II - Front End/Projeto-Movie-Cards-Library-CRUD-Bloco-13/movie-cards-lirary-CRUD/src/pages/NewMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieForm from '../components/MovieForm';\nimport { createMovie, getMovie } from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldRedirect: false,\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.bringDetails = this.bringDetails.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    getMovie(id).then(movie => {\n      this.bringDetails(movie);\n    });\n  }\n\n  handleSubmit(newMovie) {\n    createMovie(newMovie);\n    this.setState({\n      shouldRedirect: true\n    });\n  }\n\n  bringDetails() {\n    const {\n      movie\n    } = this.state;\n    this.setState({\n      movie\n    });\n  }\n\n  render() {\n    const {\n      shouldRedirect\n    } = this.state;\n    if (shouldRedirect) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"new-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nNewMovie.propTypes = {\n  match: PropTypes.shape({\n    params: {\n      id: PropTypes.number\n    }\n  }).isRequired\n};\nexport default NewMovie;","map":{"version":3,"sources":["/home/gabiazevedo/Trybe/Projetos-Trybe/Projetos MÃ³dulo II - Front End/Projeto-Movie-Cards-Library-CRUD-Bloco-13/movie-cards-lirary-CRUD/src/pages/NewMovie.js"],"names":["React","Component","Redirect","PropTypes","MovieForm","createMovie","getMovie","NewMovie","constructor","props","state","shouldRedirect","movie","handleSubmit","bind","bringDetails","componentDidMount","match","params","id","then","newMovie","setState","render","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,sBAAtC;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,KADL;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAES,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAASD,MAAf;AAEAZ,IAAAA,QAAQ,CAACa,EAAD,CAAR,CAAaC,IAAb,CAAmBR,KAAD,IAAW;AAC3B,WAAKG,YAAL,CAAkBH,KAAlB;AACD,KAFD;AAGD;;AAEDC,EAAAA,YAAY,CAACQ,QAAD,EAAW;AACrBhB,IAAAA,WAAW,CAACgB,QAAD,CAAX;AACA,SAAKC,QAAL,CAAc;AACZX,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGD;;AAEDI,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,SAAKY,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd;AAGD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AAEA,QAAIC,cAAJ,EAAoB,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEpB,wBACE;AAAK,qBAAY,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAG,KAAKE,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAhD8B;;AAmDjCN,QAAQ,CAACiB,SAAT,GAAqB;AACnBP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,KAAV,CAAgB;AACrBP,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAEhB,SAAS,CAACuB;AADR;AADa,GAAhB,EAIJC;AALgB,CAArB;AAQA,eAAepB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieForm from '../components/MovieForm';\nimport { createMovie, getMovie } from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shouldRedirect: false,\n      movie: {},\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.bringDetails = this.bringDetails.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n\n    getMovie(id).then((movie) => {\n      this.bringDetails(movie);\n    });\n  }\n\n  handleSubmit(newMovie) {\n    createMovie(newMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  bringDetails() {\n    const { movie } = this.state;\n\n    this.setState({\n      movie,\n    });\n  }\n\n  render() {\n    const { shouldRedirect } = this.state;\n\n    if (shouldRedirect) return <Redirect to=\"/\" />;\n\n    return (\n      <div data-testid=\"new-movie\">\n        <MovieForm onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  match: PropTypes.shape({\n    params: {\n      id: PropTypes.number,\n    },\n  }).isRequired,\n};\n\nexport default NewMovie;\n"]},"metadata":{},"sourceType":"module"}